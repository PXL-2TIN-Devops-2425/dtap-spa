pipeline {
    agent any
    tools {
        // Gebruik de Node.js-toolconfiguratie genaamd 'testenvnode'
        nodejs 'testenvnode'
    }
    environment {
        DOCKER_IMAGE = 'martijnvb2003/dtap_image:latest' // Pas dit aan naar het Docker image van je teamgenoot
        DOCKER_HUB_CREDENTIALS = 'dockerhub-credentials' // Vul hier de juiste credentials ID in voor Docker Hub
    }
  
    stages {
        stage('Cleanup') {
            steps {
                cleanWs()
            }
        }
         stage('Checkout repository') {
            steps {
                // Clonen van de GitHub repository
                git branch: 'main', url: 'https://github.com/PXL-2TIN-Devops-2425/dtap-spa.git'
            }
        }
        stage('Install dependencies') {
            steps {
                script {
                    echo 'Using Node.js tool: testenvnode'
                }
                // Voer het npm install commando uit
                sh 'npm init -y'
                sh 'npm install'
            }     
        }
        stage('Build artifact') {
            steps {
                sh 'docker build -t dtap_image .'   
            }
        }
        stage('Push artifact') {
            steps {
                // Log in bij Docker Hub met veilige Jenkins-credentials
                withCredentials([usernamePassword(credentialsId: "${DOCKER_HUB_CREDENTIALS}", usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    // Log in zonder je wachtwoord hardcoded
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
                // Push de container naar Docker Hub
                sh 'docker tag dtap_image ${DOCKER_IMAGE}'
                sh 'docker push ${DOCKER_IMAGE}'
                
            }
        }
    }
}
